# V-Learning Platform Configuration
global:
  namespace: v-learning
<<<<<<< HEAD
  imageRegistry: mahdi0188
  imageTag: test-3
=======
  imageTag: test-2
  previousImageTag: test-1  # For canary deployments
  branch: test  # Options: dev, test, main

# Istio Service Mesh Configuration
istio:
  enabled: false  # Default to false, will be enabled based on branch
  # mTLS Configuration (simplified)
  mtls:
    enabled: true
    mode: PERMISSIVE  # PERMISSIVE allows both mTLS and plain traffic
  # Ingress Gateway Configuration (HTTP only)
  ingressGateway:
    enabled: true
    name: v-learning-gateway
    host: v-learning.local
    port: 80

# Canary Deployment Configuration (simplified)
canary:
  enabled: false
  # Traffic splitting - current vs previous image
  currentWeight: 90   # Traffic to current image tag
  previousWeight: 10  # Traffic to previous image tag
  # Which services to enable canary for
  userService: false
  courseService: false
  contentService: false
  enrollmentService: false
  certificateService: false
>>>>>>> dev

# Horizontal Pod Autoscaler Configuration
hpa:
  enabled: true
  # Default HPA settings for all microservices
  default:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    scaleDown:
      stabilizationWindowSeconds: 300
      percentValue: 10
      periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      percentValue: 50
      periodSeconds: 60
  # Per-service HPA overrides
  userService:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
  courseService:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
  contentService:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    targetCPUUtilizationPercentage: 80
  enrollmentService:
    enabled: true
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 75
  certificateService:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80


# Resource requests and limits for microservices
resources:
  userService:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  courseService:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  contentService:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  enrollmentService:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  certificateService:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# Database Configuration
postgres:
  enabled: true  # Enabled - using simple PostgreSQL
  image: postgres:15-alpine
  database: pfe_learning
  username: pfe_user
  password: "123456"

# Service Discovery
eureka:
  enabled: true
  port: 8761

# API Gateway
gateway:
  enabled: true
  port: 8080
  nodePort: 30081

# Microservices
userService:
  enabled: true
  port: 8081

courseService:
  enabled: true
  port: 8082

contentService:
  enabled: true
  port: 8083

enrollmentService:
  enabled: true
  port: 8084

certificateService:
  enabled: true
  port: 8085

# Frontend
frontend:
  enabled: true
  port: 4200
  nodePort: 30421
